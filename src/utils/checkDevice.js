import { exec } from 'child_process';
import { authDb } from '../constants/index.js';

const allowedMacs = authDb.mac;
export const checkDevice = () => {
    exec(
        'sudo /smarthome-back/src/scripts/arp-scan.sh',
        (error, stdout, stderr) => {
            if (error) {
                console.error(`–ü–æ–º–∏–ª–∫–∞: ${error.message}`);
                return;
            }

            if (stderr) {
                console.error(`stderr: ${stderr}`);
                return;
            }
            console.log(stdout);
            const foundMac = allowedMacs.find(mac =>
                stdout.toLowerCase().includes(mac.toLowerCase()),
            );
            if (foundMac) {
                switch (foundMac.toLowerCase()) {
                    case '42:4B:13:10:02:24':
                        console.log('‚úÖ –ü—ñ–¥–∫–ª—é—á–µ–Ω–æ —Ç–µ–ª–µ—Ñ–æ–Ω Hennadii');
                        break;
                    case '62:07:5C:44:10:D7':
                        console.log('‚úÖ –ü—ñ–¥–∫–ª—é—á–µ–Ω–æ –ø–ª–∞–Ω—à–µ—Ç –¥—Ä—É–∂–∏–Ω–∏');
                        break;
                }
                console.log(`‚úÖ –ó–Ω–∞–π–¥–µ–Ω–æ –ø—Ä–∏—Å—Ç—Ä—ñ–π –∑ MAC: ${foundMac}`);
            } else {
                console.log('‚ùå –ñ–æ–¥–µ–Ω –∑ –¥–æ–∑–≤–æ–ª–µ–Ω–∏—Ö MAC-–∞–¥—Ä–µ—Å –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ.');
            }
        },
    );
};

// const { exec } = require('child_process');

// // –°–ø–∏—Å–æ–∫ –¥–æ–∑–≤–æ–ª–µ–Ω–∏—Ö MAC-–∞–¥—Ä–µ—Å (–Ω–∏–∂–Ω—ñ–π —Ä–µ–≥—ñ—Å—Ç—Ä!)

// // –§—É–Ω–∫—Ü—ñ—è –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏ –ø—Ä–∏—Å—É—Ç–Ω–æ—Å—Ç—ñ —Ö–æ—á–∞ –± –æ–¥–Ω–æ–≥–æ –ø—Ä–∏—Å—Ç—Ä–æ—é
// function checkForDevices() {}

// // –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –≤—ñ–¥–∫—Ä–∏—Ç—Ç—è –∫–ª–∞–ø–∞–Ω–∞ (–∞–±–æ –±—É–¥—å-—è–∫–æ—ó —ñ–Ω—à–æ—ó –¥—ñ—ó)
// function openValve() {
//     console.log('üö∞ –í—ñ–¥–∫—Ä–∏–≤–∞—î–º–æ –∫–ª–∞–ø–∞–Ω...');
//     // –¢—É—Ç —Ç–≤–æ—è –ª–æ–≥—ñ–∫–∞ ‚Äî HTTP-–∑–∞–ø–∏—Ç –¥–æ ESP32, –∑–º—ñ–Ω–∞ GPIO, —Ç–æ—â–æ
// }

// // –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –∫–æ–∂–Ω—É —Ö–≤–∏–ª–∏–Ω—É
// setInterval(checkForDevices, 60 * 1000);
